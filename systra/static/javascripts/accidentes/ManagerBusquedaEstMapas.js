// Generated by CoffeeScript 1.6.3
define(['core/sandbox', 'vendor/min/moment'], function(sandbox, momento) {
  var ManagerBusquedaEstMapas;
  return ManagerBusquedaEstMapas = {
    mapa: null,
    map: null,
    tam: 15,
    index: 0,
    first: null,
    previo: null,
    next: null,
    last: null,
    data_seleccionada: [],
    data: null,
    marcas: [],
    iniciar: function() {
      var frm, latlng, params, that;
      that = this;
      this.sandbox = new sandbox(this);
      this.sandbox.on('llenar-tabla-puntos', this.llenarTabla);
      this.sandbox.on('mostrar-uno-mapa', this.mostrarUnoMap);
      this.mapa = document.getElementById('map1');
      this.first = $('#firstMarcas-mapa');
      this.first.on('click', function(event) {
        return that.doFirst();
      });
      this.previo = $('#previoMarcas-mapa');
      this.previo.on('click', function(event) {
        return that.doPrevio();
      });
      this.next = $('#nextMarcas-mapa');
      this.next.on('click', function(event) {
        return that.doNext();
      });
      this.last = $('#lastMarcas-mapa');
      this.last.on('click', function(event) {
        return that.doLast();
      });
      latlng = new google.maps.LatLng(21.0971262226, -101.646839608);
      params = {
        center: latlng,
        zoom: 11,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        mapTypeControl: true,
        streetViewControl: true
      };
      this.map = new google.maps.Map(this.mapa, params);
      frm = $("#frm-bus-map");
      return frm.submit(function() {
        console.log("Dentro de la consulta");
        $.ajax({
          data: frm.serialize(),
          type: frm.attr('method'),
          url: frm.attr('action'),
          csrfmiddlewaretoken: '{{ csrf_token }}',
          success: function(data) {
            return that.sandbox.emit('llenar-tabla-puntos', data);
          },
          error: function(data) {
            return console.log("ERrorrrr");
          }
        });
        return false;
      });
    },
    llenarTabla: function(data) {
      var fecha, i, item, row, tabla, that, _i, _len, _results,
        _this = this;
      that = this;
      $("#boton_resultado").click();
      tabla = $("#resultado-bus-map>tbody");
      $("#resultado-bus-map>tbody").empty();
      this.data = data;
      i = 0;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        if (i > this.tam) {
          break;
        }
        momento = new moment(item.fecha);
        fecha = momento.format('YYYY-MM-DD hh:mm');
        row = "<tr>						<td><input type=\"checkbox\" class=\"showMapaPunto\" id=\"" + item.id_unico + "\"></td>						<td>" + item.id_preliminar + "</td>						<td>" + item.tipo + "</td>						<td>" + fecha + "</td>						</tr>";
        tabla.append(row);
        $("#" + item.id_unico).on('click', function(event) {
          return that.sandbox.emit('mostrar-uno-mapa', event);
        });
        _results.push(i++);
      }
      return _results;
    },
    buildIndice: function(op, data) {
      var fin, incio, inicio;
      console.log(data.length);
      inicio = 0;
      fin = 0;
      if (op === 'first') {
        inicio = 0;
        if (data.length > inicio + this.tam) {
          fin = inicio + this.tam;
        } else {
          fin = data.length;
        }
      } else if (op === "previo") {
        fin = this.index;
        if (this.index - this.tam > 0) {
          incio = this.index - this.tam;
        } else {
          inicio = 0;
        }
      } else if (op === "next") {
        inicio = this.index;
        if (this.index + this.tam < data.length) {
          fin = this.index + this.tam;
        } else {
          fin = data.length;
        }
      } else if (op === "last") {
        fin = data.length;
        if (data.length > this.tam) {
          inicio = data.length;
        } else {
          inicio = 0;
        }
      }
      console.log("El inicioooooo: " + inicio + "   find: " + fin);
      return [inicio, fin];
    },
    doFirst: function() {
      return this.showItemsTabla('first');
    },
    doPrevio: function() {
      return this.showItemsTabla('previo');
    },
    doNext: function() {
      return this.showItemsTabla('next');
    },
    doLast: function() {
      return this.showItemsTabla('last');
    },
    showItemsTabla: function(op) {
      var data, fecha, i, indices, item, row, tabla, _i, _ref, _ref1,
        _this = this;
      tabla = $("#resultado-bus-map>tbody");
      $("#resultado-bus-map>tbody").empty();
      if (this.data) {
        data = this.data;
        indices = this.buildIndice(op, data);
        this.index = indices[1];
        console.log("El indice  " + indices[0] + "  fin: " + indices[1]);
        for (i = _i = _ref = indices[0], _ref1 = indices[1]; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = _ref <= _ref1 ? ++_i : --_i) {
          console.log("El indice");
          item = data[i];
          momento = new moment(item.fecha);
          fecha = momento.format('YYYY-MM-DD hh:mm');
          row = "<tr>							<td><input type=\"checkbox\" class=\"showMapaPunto\" id=\"" + item.id_unico + "\"></td>							<td>" + item.id_preliminar + "</td>							<td>" + item.tipo + "</td>							<td>" + fecha + "</td>							</tr>";
          tabla.append(row);
        }
        return $(".showMapaPunto").on('click', function(event) {
          return that.sandbox.emit('mostrar-uno-mapa', event);
        });
      }
    },
    mostrarUnoMap: function(evento) {
      var elem, id;
      elem = evento.currentTarget;
      id = elem.id;
      if (elem.checked) {
        this.addSeleccionado(id);
      } else {
        this.removeSeleccionado(id);
      }
      return this.actualizarMarcas();
    },
    addSeleccionado: function(id) {
      var item, _i, _len, _ref, _results;
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.id_unico === id) {
          _results.push(this.data_seleccionada.push(item));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    },
    removeSeleccionado: function(id) {
      var item, newarr, _i, _len, _ref;
      newarr = [];
      _ref = this.data_seleccionada;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.id_unico !== id) {
          newarr.push(item);
        }
      }
      return this.data_seleccionada = newarr;
    },
    limpiarMarcas: function() {
      var marca, marcas, _i, _len, _ref;
      _ref = this.marcas;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        marca = _ref[_i];
        marca.setMap(null);
      }
      return marcas = [];
    },
    actualizarMarcas: function() {
      var buildVentana, data, i, item, latlng, makeListener, primero, that, ventanas, _i, _len, _results;
      that = this;
      this.limpiarMarcas();
      data = this.data_seleccionada;
      primero = data[0];
      latlng = new google.maps.LatLng(primero.lat, primero.lng);
      that.map.setCenter(latlng);
      ventanas = [];
      buildVentana = function(i, item) {
        return $.ajax({
          type: 'GET',
          url: '/accidente/getUrlImagenesDeAccidente/' + item.id_unico + "/",
          success: function(id_recursos) {
            var cad, id, _i, _len;
            cad = '<a class="mapa-cargarAccidente" href="/accidente/cargarAccidente/' + item.id_unico + '/">Ver</a>';
            for (_i = 0, _len = id_recursos.length; _i < _len; _i++) {
              id = id_recursos[_i];
              cad += '<img class="imagen-mapa" src="/content/content/' + id + '"></img>';
            }
            return ventanas[i] = new google.maps.InfoWindow({
              content: cad
            });
          }
        });
      };
      makeListener = function(i, item) {
        return function() {
          var ventana, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = ventanas.length; _i < _len; _i++) {
            ventana = ventanas[_i];
            ventana.close();
            _results.push(ventanas[i].open(that.map, that.marcas[i]));
          }
          return _results;
        };
      };
      _results = [];
      for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
        item = data[i];
        this.marcas[i] = new google.maps.Marker({
          position: new google.maps.LatLng(item.lat, item.lng),
          map: that.map,
          title: item.id_preliminar
        });
        buildVentana(i, item);
        _results.push(google.maps.event.addListener(this.marcas[i], 'click', makeListener(i, item)));
      }
      return _results;
    }
  };
});
