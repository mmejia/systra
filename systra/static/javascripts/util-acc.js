// Generated by CoffeeScript 1.6.3
window.validateSubMarca = function(dato) {
  var marca, marcas, _i, _len;
  if (!window.marcas) {
    return cargarMarca(this.validateMarca(dato));
  } else {
    marcas = window.marcas;
    for (_i = 0, _len = marcas.length; _i < _len; _i++) {
      marca = marcas[_i];
      if (dato === marca.submarca) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo la submarca, selecciona una valida"
    };
  }
};

window.validateUnidad = function(dato) {
  var comp, unidad, unidades, _i, _len;
  if (!window.tbUnidades2008) {
    return cargarTbUnidades2008(this.validateUnidad(dato));
  } else {
    unidades = window.tbUnidades2008;
    for (_i = 0, _len = unidades.length; _i < _len; _i++) {
      unidad = unidades[_i];
      comp = unidad.no_unidad;
      if (dato === comp) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo la unidad que intervino"
    };
  }
};

window.validateAgente = function(dato) {
  var agente, agentes, comp, _i, _len;
  if (!window.catAgentes) {
    return cargarCatAgentes(this.validateAgentes(dato));
  } else {
    agentes = window.catAgentes;
    for (_i = 0, _len = agentes.length; _i < _len; _i++) {
      agente = agentes[_i];
      comp = agente.num_cobro + "--" + agente.nombre;
      if (dato === comp) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo al Agente que intervino"
    };
  }
};

window.validateMarca = function(dato) {
  var marca, marcas, _i, _len;
  if (!window.marcas) {
    return cargarMarca(this.validateMarca(dato));
  } else {
    marcas = window.marcas;
    for (_i = 0, _len = marcas.length; _i < _len; _i++) {
      marca = marcas[_i];
      if (dato === marca.marca) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo la marca, selecciona una valida"
    };
  }
};

window.validateEdad = function(valor) {
  if ($.isNumeric(valor)) {
    if (valor >= 0 && valor <= 150) {
      return {
        res: true,
        msg: ""
      };
    } else {
      return {
        res: false,
        msg: "El dato de edad debe de ser valido"
      };
    }
  } else {
    if (valor === 'SE DESCONOCE') {
      return {
        res: true,
        msg: ""
      };
    } else {
      return {
        res: false,
        msg: "No se permite este valor"
      };
    }
  }
};

window.validateMunicipio = function(dato) {
  var municipio, municipios, _i, _len;
  if (!window.municipios) {
    return cargarMunicipios(this.validateMunicipio(dato));
  } else {
    municipios = window.municipios;
    for (_i = 0, _len = municipios.length; _i < _len; _i++) {
      municipio = municipios[_i];
      if (dato === municipio.municipio) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo el municipio, selecciona uno valido"
    };
  }
};

window.validateEstado = function(dato) {
  var estado, estados, _i, _len;
  if (!window.estados) {
    return cargarEstados(this.validateEstados(dato));
  } else {
    estados = window.estados;
    for (_i = 0, _len = estados.length; _i < _len; _i++) {
      estado = estados[_i];
      if (dato === estado.estado) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo el estado, selecciona una valida"
    };
  }
};

window.validateColonia = function(dato) {
  var colonia, colonias, _i, _len;
  if (!window.colonias) {
    return cargarColonias(this.validateColonia(dato));
  } else {
    colonias = window.colonias;
    for (_i = 0, _len = colonias.length; _i < _len; _i++) {
      colonia = colonias[_i];
      if (dato === colonia.nombre) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo la colonia, selecciona una valida"
    };
  }
};

window.validateCalle = function(dato) {
  var calle, calles, _i, _len;
  if (!window.calles) {
    return cargarCalles(this.validateCalle(dato));
  } else {
    calles = window.calles;
    for (_i = 0, _len = calles.length; _i < _len; _i++) {
      calle = calles[_i];
      if (dato === calle.calle) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo la calle, selecciona una valida"
    };
  }
};

window.actualizarComandanciaValor = function(valor) {
  var col, comandancia, _i, _len, _ref;
  col = [];
  _ref = window.comandancias;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    comandancia = _ref[_i];
    if (comandancia.delegacion === valor) {
      col.push(comandancia);
    }
  }
  console.log(col);
  window.actualizarSelectComandancia(col);
};

window.actualizarSubMarcaValor = function(valor) {
  var col, marca, _i, _len, _ref;
  col = [];
  _ref = window.marcas;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    marca = _ref[_i];
    if (marca.marca === valor) {
      col.push(marca);
    }
  }
  window.actualizarSelectSubMarca(col);
};

window.actualizarMapa = function(calle, colonia) {
  var geocoder, req;
  geocoder = new google.maps.Geocoder();
  req = {
    address: calle,
    componentRestrictions: {
      country: "MX",
      administrativeArea: "GTO",
      locality: "LeÃ³n+de+Los+Aldama"
    }
  };
  geocoder.geocode(req, function(resultado, status) {
    var primero;
    if (status === google.maps.GeocoderStatus.OK) {
      primero = resultado[0];
      window.mapa.setCenter(primero.geometry.location);
      window.marker.setPosition(primero.geometry.location);
      $("#geocomplete").val(primero.formatted_address);
      $("#lat_pp").val(primero.geometry.location.lat());
      return $("#lng_pp").val(primero.geometry.location.lng());
    }
  });
  return google.maps.event.trigger(window.mapa, 'resize');
};

window.actualizarComandancia = function() {
  var col, comandancia, valor, _i, _len, _ref;
  if (!window.comandancias) {
    window.cargarComandancias(window.actualizarComandancia);
  } else {
    col = [];
    valor = $("#delegacion_pp option:first").val();
    _ref = window.comandancias;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      comandancia = _ref[_i];
      if (comandancia.delegacion === valor) {
        col.push(comandancia);
      }
    }
    window.actualizarSelectComandancia(col);
  }
};

window.actualizarSelectComandancia = function(comandancias) {
  var comandancia, ctl_comandancia, opciones, _i, _len;
  ctl_comandancia = $('#comandancia_pp');
  ctl_comandancia.html('');
  opciones = '<option  value="NO">**SELECCIONAR**</option>';
  for (_i = 0, _len = comandancias.length; _i < _len; _i++) {
    comandancia = comandancias[_i];
    opciones += '<option value="' + comandancia.comandancia + '">' + comandancia.comandancia + '</option>';
  }
  ctl_comandancia.append(opciones);
};

window.actualizarSelectSubMarca = function(marcas) {
  var ctl_submarca, marca, opciones, _i, _len;
  ctl_submarca = $('#submarca_vehiculo_pp');
  ctl_submarca.html('');
  opciones = '<option  value="NO">**SELECCIONAR**</option>';
  for (_i = 0, _len = marcas.length; _i < _len; _i++) {
    marca = marcas[_i];
    opciones += '<option value="' + marca.submarca + '">' + marca.submarca + '</option>';
  }
  ctl_submarca.append(opciones);
};

window.cargarTipoVehiculos = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/tipoVehiculo.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.tipoVehiculos = collection;
      fn();
    }
  });
};

window.cargarCapVehs = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/capVehs.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.capVehs = collection;
      fn();
    }
  });
};

window.cargarDescVehiculos = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/descVehiculos.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.descVehiculos = collection;
      fn();
    }
  });
};

window.cargarPensiones = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/pensiones.json',
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.pensiones = col;
      fn();
    }
  });
};

window.cargarEnCustodias = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/enCustodias.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.enCustodias = collection;
      fn();
    }
  });
};

window.cargarColores = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/colores.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.colores = collection;
      fn();
    }
  });
};

window.cargarVisibilidades = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/visibilidades.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.visibilidades = collection;
      fn();
    }
  });
};

window.cargarParteDias = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/partedias.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.parteDias = collection;
      fn();
    }
  });
};

window.cargarTipoCalles = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/tipocalles.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.tipoCalles = collection;
      fn();
    }
  });
};

window.cargarNoCarriles = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/nocarriles.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.noCarriles = collection;
      fn();
    }
  });
};

window.cargarSentidos = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/sentidos.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.sentidos = collection;
      fn();
    }
  });
};

window.cargarAlineaciones = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/alineaciones.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.alineaciones = collection;
      fn();
    }
  });
};

window.cargarEstadoCalles = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/estadocalles.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.estadoCalles = collection;
      fn();
    }
  });
};

window.cargarClimas = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/climas.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.climas = collection;
      fn();
    }
  });
};

window.cargarRegulaciones = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/regulaciones.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.regulaciones = collection;
      fn();
    }
  });
};

window.cargarObjetosDanados = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/objetosdanados.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.objetosDanados = collection;
      fn();
    }
  });
};
