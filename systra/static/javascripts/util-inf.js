// Generated by CoffeeScript 1.6.3
window.showMensaje = function() {
  return "Seguro que quieres dejar la pagina";
};

window.actualizarComandanciaValor = function(valor) {
  var col, comandancia, _i, _len, _ref;
  col = [];
  console.log(window.comandancias);
  _ref = window.comandancias;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    comandancia = _ref[_i];
    if (comandancia.delegacion === valor) {
      col.push(comandancia);
    }
  }
  window.actualizarSelectComandancia(col);
};

window.cargarDescVehiculos = function(fn) {
  $.ajax({
    type: 'GET',
    url: '/catalogos/descVehiculos.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.descVehiculos = collection;
      fn();
    }
  });
};

window.actualizarComandancia = function() {
  var col, comandancia, valor, _i, _len, _ref;
  if (!window.comandancias) {
    window.cargarComandancias(window.actualizarComandancia);
  } else {
    col = [];
    valor = $("#delegacion_spa_inf option:first").val();
    console.log(valor);
    _ref = window.comandancias;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      comandancia = _ref[_i];
      if (comandancia.delegacion === valor) {
        col.push(comandancia);
      }
    }
    if (valor === 'NO') {
      window.actualizarSelectComandancia(window.comandancias);
    } else {
      window.actualizarSelectComandancia(col);
    }
  }
};

window.actualizarSelectComandancia = function(comandancias) {
  var comandancia, ctl_comandancia, opciones, _i, _len;
  ctl_comandancia = $('#comandancia_spa_inf');
  ctl_comandancia.html('');
  opciones = '<option  value= "NO">**SELECCIONAR**</option>';
  for (_i = 0, _len = comandancias.length; _i < _len; _i++) {
    comandancia = comandancias[_i];
    opciones += '<option value="' + comandancia.comandancia + '">' + comandancia.comandancia + '</option>';
  }
  ctl_comandancia.append(opciones);
};

window.cargarProfiles = function(fn) {
  return $.ajax({
    type: 'GET',
    url: '/catalogos/listProfile.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.profiles = collection;
      fn();
    }
  });
};

window.cargarCatAgentes = function(fn) {
  return $.ajax({
    type: 'GET',
    url: '/catalogos/CatAgentesNew.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.catAgentes = collection;
      fn();
    }
  });
};

window.cargarCirculaciones = function(fn) {
  return $.ajax({
    type: 'GET',
    url: '/catalogos/circulaciones.json',
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.circulaciones = collection;
      fn();
    }
  });
};

window.cargarDelegaciones = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/delegaciones.json",
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.delegaciones = collection;
      return fn();
    }
  });
};

window.cargarComandancias = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/comandancias.json",
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.comandancias = collection;
      console.log(window.comandancias);
      return fn();
    }
  });
};

window.cargarTurnos = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/turnos.json",
    success: function(data) {
      var collection, item, _i, _len;
      collection = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        collection.push(item);
      }
      window.turnos = collection;
      return fn();
    }
  });
};

window.cargarColonias = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/colonias.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.colonias = col;
      return fn();
    }
  });
};

window.cargarEstados = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/estados.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.estados = col;
      return fn();
    }
  });
};

window.cargarMunicipios = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/municipios.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.municipios = col;
      return fn();
    }
  });
};

window.refrescarTablaBlocks = function(folio) {
  $.post('/folios/getBlocksByFolio/' + folio + "/", function(data) {
    var block, row, tabla, _i, _len, _results,
      _this = this;
    tabla = $("#listaFolios");
    $("#listaFolios>tbody").empty();
    _results = [];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      block = data[_i];
      if (block) {
        row = "<tr>					<td><a href=\"#block-\" id=\"" + block.id + "\" class=\"borrar-articulo\"><i class='icon-edit'></i></td>					<td>" + block.no_blocks + "</td>					<td>" + block.fecha_recibido + "</td>					<td>" + block.folio_inicial + "</td>					<td>" + block.folio_final + "</td>					<td>" + block.faltantes + "</td>					<td>" + block.entregados + "</td>					</tr>";
      }
      tabla.append(row);
      _results.push($("#block_" + block.id).on('click', function(event) {
        var her, id, identificador;
        identificador = evento.currentTarget.id;
        her = identificador.split('-');
        id = her[1];
        return that.borrarArticulo(id);
      }));
    }
    return _results;
  });
};

window.borrarBlock = function(id) {
  return $.post('/folios/remove/' + id, function(data) {
    return that.showMensaje('Se elimino el folio  <span class="new-folio">' + data.id + '</span> exitosamente!!!');
  });
};

window.cargarCalles = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/calles.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.calles = col;
      return fn();
    }
  });
};

window.cargarOperativos = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/operativos.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.operativos = col;
      return fn();
    }
  });
};

window.cargarArticulos = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/articulos.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.articulos = col;
      return fn();
    }
  });
};

window.cargarPensiones = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/pensiones.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.pensiones = col;
      return fn();
    }
  });
};

window.cargarMarcas = function(fn) {
  return $.ajax({
    type: 'GET',
    url: "/catalogos/marcas.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.marcas = col;
      return fn();
    }
  });
};

window.cargarColores = function(fn) {
  $.ajax({
    type: 'GET',
    url: "/catalogos/colores.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.colores = col;
      return fn();
    }
  });
};

window.cargarTipoVehiculos = function(fn) {
  $.ajax({
    type: 'GET',
    url: "/catalogos/tipoVehiculo.json",
    success: function(data) {
      var col, item, _i, _len;
      col = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        item = data[_i];
        col.push(item);
      }
      window.tipoVehiculos = col;
      return fn();
    }
  });
};

window.actualizarSubMarcaValor = function(valor) {
  var col, marca, _i, _len, _ref;
  col = [];
  _ref = window.marcas;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    marca = _ref[_i];
    if (marca.marca === valor) {
      col.push(marca);
    }
  }
  window.actualizarSelectSubMarca(col);
};

window.actualizarSelectSubMarca = function(marcas) {
  var ctl_submarca, marca, opciones, _i, _len;
  ctl_submarca = $('#submarca_cv_spa_inf');
  ctl_submarca.html('');
  opciones = '<option  value="NO">**SELECCIONAR**</option>';
  for (_i = 0, _len = marcas.length; _i < _len; _i++) {
    marca = marcas[_i];
    opciones += '<option value="' + marca.submarca + '">' + marca.submarca + '</option>';
  }
  ctl_submarca.append(opciones);
};

window.validateFolioAgente = function(dato) {
  var agente, agentes, comp, _i, _len;
  if (!window.catAgentes) {
    return cargarCatAgentes(this.llenarAgentes(dato));
  } else {
    agentes = window.catAgentes;
    for (_i = 0, _len = agentes.length; _i < _len; _i++) {
      agente = agentes[_i];
      comp = agente.num_cobro;
      if (dato === comp) {
        return {
          res: true,
          msg: ""
        };
      }
    }
    return {
      res: false,
      msg: "No se localizo al Agente que intervino"
    };
  }
};
