// Generated by CoffeeScript 1.6.3
define(['core/sandbox'], function(sandbox) {
  var modulo;
  return modulo = {
    padreId: "#managerArticulos_spa_inf",
    elementId: "#managerArticulosView_spa_inf",
    element: null,
    template: null,
    padre: null,
    articulosSel: [],
    botonAgregarId: '#sel-articulo-spa-inf',
    botonBorrarClass: 'botonBorrarArticulo_spa_inf',
    txtSelArticulo: "#articulos_spa_inf",
    currentArticulo: null,
    articulosSeleccionados: [],
    that: this,
    iniciar: function() {
      var that,
        _this = this;
      that = this;
      this.padre = $(this.padreId);
      this.sandbox = new sandbox(this);
      $(this.botonAgregarId).on('click', function() {
        that.buscarAgregarArticulo(that.currentArticulo, _this);
      });
      this.sandbox.on("agregar-articulo-spa-inf", this.agregarArticulo);
      this.sandbox.on("borrar-articulo-spa-inf", this.borrarArticulo);
      this.sandbox.on('update-articulos', this.updateArticulos);
      this.sandbox.on('limpiar-articulos', this.limpiarArticulos);
      this.sandbox.on('llenar-infraccion-articulos', this.llenarInfraccionArticulos);
      return this.llenarArticulos();
    },
    llenarInfraccionArticulos: function() {
      var inf;
      inf = window.infraccion;
      inf.articulos = this.articulosSeleccionados;
      return console.log(window.infraccion);
    },
    updateArticulos: function(data) {
      this.articulosSeleccionados = data.contenido;
      return this.renderArticulos(this);
    },
    limpiarArticulos: function() {
      this.articulosSeleccionados = [];
      return this.renderArticulos();
    },
    llenarArticulos: function() {
      var item, nombres, that, _i, _len, _ref;
      that = this;
      if (!window.articulos) {
        cargarArticulos(this.llenarArticulos);
      } else {
        nombres = [];
        _ref = window.articulos;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          item.toString = function() {
            return this.art + "-" + this.fracc + "-" + this.descc;
          };
          nombres.push({
            value: item
          });
        }
        $("#articulos_spa_inf").autocomplete({
          that: that,
          source: nombres,
          select: function(event, ui) {
            that.currentArticulo = ui.item.value;
          }
        });
      }
    },
    buscarAgregarArticulo: function(articulo) {
      this.sandbox.emit('agregar-articulo-spa-inf', {
        value: articulo
      });
    },
    buscarBorrarArticulo: function(articulo) {
      this.sandbox.emit('borrarticulo-spa-inf', {
        value: articulo
      });
    },
    renderArticulos: function() {
      var articulo, row, tabla, that, _i, _len, _ref,
        _this = this;
      that = this;
      tabla = $("#tab_articulos_spa_inf");
      $("#tab_articulos_spa_inf>tbody").empty();
      console.log(this.articulosSeleccionados);
      _ref = this.articulosSeleccionados;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        articulo = _ref[_i];
        console.log(articulo);
        if (articulo || articulo !== void 0) {
          row = "<tr>						<td><a href=\"#\" id=\"infr_" + articulo.id + "\" class=\"tablaBorrarArticulo\"><i class=\"icosystra-remove\"></i></a></td>						<td>" + articulo.art + "</td>						<td>" + articulo.fracc + "</td>						<td>" + articulo.descc + "</td>						</tr>";
          tabla.append(row);
          $("#infr_" + articulo.id).on('click', function(evento) {
            that.borrarArticulo(evento);
          });
        }
      }
    },
    agregarArticulo: function(elemento) {
      if (this.that.currentArticulo === null) {
        return;
      }
      this.addArticulo(this.articulosSeleccionados, this.that.currentArticulo);
      this.renderArticulos();
      this.that.currentArticulo = null;
      $(this.txtSelArticulo).val("");
    },
    addArticulo: function(seleccionados, p_art) {
      var art, clone, _i, _len;
      clone = seleccionados.slice(0);
      for (_i = 0, _len = clone.length; _i < _len; _i++) {
        art = clone[_i];
        if (art) {
          if (art.art === p_art.art && art.fracc === p_art.fracc) {
            return;
          }
        }
      }
      return seleccionados.push(p_art);
    },
    borrarArticulo: function(evento) {
      var articulo, borrar, clone, her, i, id, ident, lista, _i, _j, _len, _len1;
      console.log(evento.currentTarget.id);
      ident = evento.currentTarget.id;
      her = ident.split("_");
      id = her[1];
      console.log(id);
      lista = this.articulosSeleccionados;
      clone = [];
      clone = this.articulosSeleccionados.slice(0);
      borrar = [];
      for (i = _i = 0, _len = clone.length; _i < _len; i = ++_i) {
        articulo = clone[i];
        if (articulo) {
          if ('' + articulo.id === '' + id) {
            borrar.push(i);
          }
        }
      }
      for (_j = 0, _len1 = borrar.length; _j < _len1; _j++) {
        i = borrar[_j];
        delete this.articulosSeleccionados[i];
      }
      this.renderArticulos();
    }
  };
});
