// Generated by CoffeeScript 1.6.3
define(['core/sandbox'], function(sandbox) {
  var ManagerMenuMain;
  return ManagerMenuMain = {
    iniciar: function() {
      var that;
      that = this;
      this.sandbox = new sandbox(this);
      this.sandbox.on('update-menu-infracciones-local', this.refrescarMenuInfraccionesLocal);
      this.sandbox.on('update-menu-infracciones-server', this.refrescarMenuInfraccionesServer);
      this.renderInfraccionesLocal();
      return this.renderInfraccionesServer();
    },
    refrescarMenuInfraccionesServer: function(infracciones) {
      var infraccion, lis, that, ul, _i, _len, _results;
      that = this;
      ul = $('#ul-infraccion-server');
      lis = '<li class="nav-header">INFRACCIONES SERVER</li>';
      ul.html(lis);
      _results = [];
      for (_i = 0, _len = infracciones.length; _i < _len; _i++) {
        infraccion = infracciones[_i];
        lis = '<li><a href="#" id="mm_' + infraccion + '" class="liLoadInfraccionesServer">' + infraccion + '</a></li>';
        ul.append(lis);
        _results.push($("#mm_" + infraccion).on('click', function(evento) {
          var her, id, mm;
          mm = evento.currentTarget.id;
          her = mm.split("_");
          id = her[1];
          return that.cargarLocalInfraccionServer(id);
        }));
      }
      return _results;
    },
    refrescarMenuInfraccionesLocal: function(infracciones) {
      var infraccion, lis, that, ul, _i, _len, _results;
      console.log(infracciones);
      that = this;
      ul = $('#ul-infraccion-local');
      lis = '<li class="nav-header">INFRACCIONES LOCALES</li>';
      ul.html(lis);
      _results = [];
      for (_i = 0, _len = infracciones.length; _i < _len; _i++) {
        infraccion = infracciones[_i];
        lis = '<li><a href="#" id="' + infraccion.folio_infraccion + '" class="liLoadInfraccion">' + infraccion.folio_infraccion + '</a></li>';
        ul.append(lis);
        _results.push($('#' + infraccion.folio_infraccion).on('click', function(event) {
          var id;
          id = event.currentTarget.id;
          return that.cargarLocalInfraccion(id);
        }));
      }
      return _results;
    },
    cargarLocalInfraccion: function(id) {
      var a_infraccion, inf, infraccion, that, _i, _len;
      that = this;
      inf = sessionStorage.getItem('infraccionesl');
      a_infraccion = JSON.parse(inf);
      for (_i = 0, _len = a_infraccion.length; _i < _len; _i++) {
        infraccion = a_infraccion[_i];
        if (infraccion.folio_infraccion === id) {
          window.infraccion = infraccion;
          this.sandbox.emit('cargar-infraccion-en-view');
          return;
        }
      }
    },
    renderInfraccionesLocal: function() {
      var a_infracciones, infracciones;
      infracciones = sessionStorage.getItem('infraccionesl');
      if (infracciones) {
        a_infracciones = JSON.parse(infracciones);
        this.sandbox.emit('update-menu-infracciones-local', a_infracciones);
      }
    },
    renderInfraccionesServer: function() {
      var a_infracciones, infracciones;
      infracciones = sessionStorage.getItem('infracciones-server');
      if (infracciones) {
        a_infracciones = JSON.parse(infracciones);
        this.sandbox.emit('update-menu-infracciones-server', a_infracciones);
      }
    },
    cargarLocalInfraccionServer: function(id) {
      var that;
      that = this;
      that.sandbox.emit('cargar-infraccion-en-view-server', id);
    }
  };
});
